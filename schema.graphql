"======================================================== FULLTEXT SEARCH ======================================================" 
type _Schema_
  @fulltext(
    name: "tokenNameSearch",
    language: en
    algorithm: rank,
    include: [
      {
        entity: "IdeaToken",
        fields: [
          { name: "name" }
        ]
      }
    ]
  )


"============================================================ MARKET ===========================================================" 
type IdeaMarket @entity {
  "<market id>"
  id: ID!
  marketID: Int!
  name: String!
  baseCost: BigInt!
  priceRise: BigInt!
  hatchTokens: BigInt!
  tradingFeeRate: BigInt!
  platformFeeRate: BigInt!
  platformFeeWithdrawer: Bytes!
  platformFeeInvested: BigInt!
  nameVerifier: Bytes!
  tokens: [IdeaToken!]! @derivedFrom(field: "market")
}

"============================================================ TOKEN ============================================================" 

type IdeaTokenPricePoint @entity {
  "<token address>-<block>-<txindex>"
  id: ID!
  token: IdeaToken!
  timestamp: BigInt!
  block: BigInt!
  txindex: BigInt!
  oldPrice: BigDecimal!
  price: BigDecimal!
}

type IdeaTokenVolumePoint @entity {
  "<token address>-<block>-<txindex>"
  id: ID!
  token: IdeaToken!
  timestamp: BigInt!
  block: BigInt!
  txindex: BigInt!
  volume: BigDecimal!
}

type IdeaTokenBalance @entity {
  "<account address>-<token address>"
  id: ID!
  holder: Bytes!
  amount: BigInt!
  token: IdeaToken!
  market: IdeaMarket!
}

type IdeaTokenAllowance @entity {
  "<owner address>-<spender address>-<token address>"
  id: ID!
  amount: BigInt!
  token: IdeaToken!
}

type IdeaToken @entity {
  "<token address>"
  id: ID!
  tokenID: Int!
  market: IdeaMarket!
  name: String!
  supply: BigInt!
  holders: Int!
  marketCap: BigInt!
  owner: Bytes!
  interestWithdrawer: Bytes!
  daiInToken: BigInt!
  invested: BigInt!
  dayChange: BigDecimal!
  dayVolume: BigDecimal!
  listedAt: BigInt! 
  lockedAmount: BigInt!
  lockedPercentage: BigDecimal!
  balances: [IdeaTokenBalance!]! @derivedFrom(field: "token")
  allowances: [IdeaTokenAllowance!]! @derivedFrom(field: "token")
  latestPricePoint: IdeaTokenPricePoint!
  dayPricePoints: [IdeaTokenPricePoint!]!
  pricePoints: [IdeaTokenPricePoint!]! @derivedFrom(field: "token")
  dayVolumePoints: [IdeaTokenVolumePoint!]!
}

"============================================================ FACTORY ==========================================================" 
type IdeaTokenFactory @entity {
  "id: factory"
  id: ID!
  owner: Bytes!
  allTokens: [IdeaToken!]!
}

"============================================================ EXCHANGE =========================================================" 
type IdeaTokenExchange @entity {
  "id: exchange"
  id: ID!
  owner: Bytes!
  tradingFeeInvested: BigInt!
}

"============================================================== VAULT ===========================================================" 
type IdeaTokenVault @entity {
  "id: vault"
  id: ID!
  futureUnlockedAmounts: [LockedIdeaTokenAmount!]!
}

type LockedIdeaTokenAmount @entity {
  "<tx hash>-<log index>"
  id: ID!
  token: IdeaToken!
  owner: Bytes!
  amount: BigInt!
  lockedUntil: BigInt!
}
